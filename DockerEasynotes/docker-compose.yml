version: '3'
services:

#Balanceador web
 haproxy_web:
   build: ./ServicioHaproxyWeb
   ports:
     - "80:80"
     - "443:443"
     - "8404:8404"
   environment:
     - WEB_SERVICE_IP1=web1
     - WEB_SERVICE_IP2=web2
     - WEB_SERVICE_PORT1=8443
     - WEB_SERVICE_PORT2=8443

#Balanceador mail
 haproxymail:
   build: ./ServicioHaproxyMail
   ports:
     - '8025:8025'
   environment:
     - WEB_SERVICE_IP1=mail1
     - WEB_SERVICE_IP2=mail2
     - WEB_SERVICE_PORT1=8025
     - WEB_SERVICE_PORT2=8025

#Creamos los servidores web
 web1:
  build: ./ServicioWeb
   #Mount VOLUME FROM FILES SYSTEM
  volumes:
    - ./Files:/app/Files
  environment:
    - SPRING_DATASOURCE_URL=jdbc:mysql:replication://mysql-master,mysql-slave/easynotes
    - VALOR_MAIL_IP=haproxymail

 web2:
  build: ./ServicioWeb
  volumes:
    - ./Files:/app/Files
  environment:
    - SPRING_DATASOURCE_URL=jdbc:mysql:replication://mysql-master,mysql-slave/easynotes
    - VALOR_MAIL_IP=haproxymail

#Creamos los dos servicios de mail
 mail1:
   build: ./ServicioMail
 mail2:
   build: ./ServicioMail

 # Load de DB 
 mysql-master:
  build:
    context: ./
    dockerfile: ./mysql/master/DockerFile
  ports:
     - 3306:3306
  restart: always
  # ADD VOLUME FOR SQL PERSISTENCY
  volumes:
    - ./mysql/master/my.cnf:/etc/mysql/conf.d/mysql.conf.cnf
    - ./mysql/master/data:/var/lib/mysql
  environment:
    MYSQL_USER: 'easynotes'
    MYSQL_PASSWORD: '1234'
    MYSQL_ROOT_PASSWORD: '1234'
    MYSQL_DATABASE: 'easynotes'
    MYSQL_ROOT_HOST: '%'

 mysql-slave:
  build:
    context: ./
    dockerfile: ./mysql/slave/DockerFile
  ports:
     - 3307:3306
  restart: always
  depends_on:
    - mysql-master
  volumes:
    - ./mysql/slave/my.cnf:/etc/mysql/conf.d/mysql.conf.cnf
    - ./mysql/slave/data:/var/lib/mysql
  environment:
    MYSQL_USER: 'easynotes_replic'
    MYSQL_PASSWORD: '1234'
    MYSQL_ROOT_PASSWORD: '1234'
    MYSQL_DATABASE: 'easynotes'
    MYSQL_ROOT_HOST: '%'

 master-slave-config:
  build: ./master_slave_config
